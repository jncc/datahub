
@page "/assets/{assetId}"
@model AssetModel

@using System.Net
@using Datahub.Web.Models
@using Datahub.Web.Pages.Helpers

@{
    ViewData["Title"] = Model.Asset.Metadata.Title;
}
@{ ViewBag.CurrentPage = "Index"; }

@section Styles {
}

@section Scripts {
    <!-- <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script> -->
    <script >
        $(function () {
            new Readmore('#abstract', {
                moreLink: '<a href="#" class="text-right">Read more</a>',
                lessLink: '<a href="#" class="text-right">Read less</a>'                
            });
        })
    </script>
}
 
<div class="space-below show-for-medium">
    <!-- whitespace for when the "show-for-small-only" microsite name subtitile is hidden -->
</div>

<div class="container">

<div class="grid-x grid-margin-x">
    <div class="cell medium-expand small-order-1 medium-order-2">
        
        <!-- Title -->
        <h1 style="margin-bottom: 1rem;">
            <span class="spot-colour" style="margin-right:0.3rem;">  
            <i class="fas @AssetHelpers.GetIconName(Model.Asset.Metadata.ResourceType)"
                data-toggle="tooltip" title="@Model.Asset.Metadata.ResourceType"></i>
            </span>
            <span style="margin-right: 0.1em;">@Model.Asset.Metadata.Title</span>
            <span class="text-small text-muted">@Model.Asset.Metadata.DatasetReferenceDate.Substring(0, 4)</span>
        </h1>

        <p>
            @foreach (var k in Model.Asset.Metadata.Keywords)
            {
                var keyword = WebUtility.UrlEncode(k.Vocab + "/" + k.Value);
                <a href="/search?k=@keyword">
                    @await Html.PartialAsync("_Keyword", new Keyword { Vocab = k.Vocab, Value = k.Value })
                </a>
            }
        </p>
        <div class="module">
            <p id="abstract">
                <span class="text-label">Abstract</span> @Model.Asset.Metadata.Abstract
            </p>
        </div>

    </div>
    @{
        // support adding "img" to the querystring just to see what any page could look like with an image
        var image = this.HttpContext.Request.Query["img"] != Microsoft.Extensions.Primitives.StringValues.Empty
            ? new Image { Url = "/images/example-cover-image.png" } // use dummy image
            : Model.Asset.Image;
            
        if (image != null && image.Url.IsNotBlank())
        {
            <div class="cell medium-shrink small-order-2 medium-order-1 space-below">
                <img src="@(image.Url)" class="asset-image" />
            </div>
        }
    }
</div> <!-- grid -->

<!-- tabs -->
<div class="grid-x grid-margin-x">
    <div class="cell large-6 large-order-2">
        <ul class="tabs" data-tabs id="resource-tabs">
            <li class="tabs-title is-active">
                <a href="#resource-list" aria-selected="true">
                    <i class="fas fa-cloud-download-alt"></i>
                    <span class="space-after">Resources</span> <span class="round-badge">@(Model.Asset.Data.Count(d => d.Http != null))</span>
                </a>
            </li>
        </ul>
        <div class="tabs-content space-below" data-tabs-content="resource-tabs">
            <div class="tabs-panel is-active" id="resource-list">
                <ul>
                    @foreach (var d in Model.Asset.Data) {
                        if (@d.Http != null) {
                            <li class="pb-2">
                                <span>
                                    <a href="@(d.Http.Url)"
                                        class="space-after"
                                        data-event="@(d.Http.FileExtension.IsNotBlank() ? "download" : "external")"
                                        data-size="@(d.Http.FileBytes.IsNotBlank() ? d.Http.FileBytes : "0")"
                                        target="_blank">@(d.Title)</a>
                                    @if (d.Http.FileExtension.IsNotBlank())
                                    {
                                        <span class="square-badge">@d.Http.FileExtension.ToUpper()</span>
                                    } else {
                                        <span class="square-badge" title="External link" data-toggle="tooltip">
                                            <span class="fas fa-external-link-alt"></span>
                                        </span>
                                    }
                                </span>
                                <br />
                                <span class="text-small">
                                    @if(d.Http.FileExtension.IsNotBlank() && d.Http.FileBytes.IsNotBlank())
                                    {
                                        <span style="word-spacing:-0.3em; margin-right:0.6em">
                                            @ByteHelpers.FormatBytesForDisplay(d.Http.FileBytes)
                                        </span>
                                        <span style="overflow-wrap: break-word;" class="text-muted">
                                            @AssetHelpers.GetFileNameForDisplay(d.Http.Url)
                                        </span>
                                    }
                                </span>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="cell large-6 large-order-1">
        <ul class="tabs" data-tabs id="detail-tabs">
            <li class="tabs-title is-active">
                <a href="#main-detail" aria-selected="true">
                    <i class="fas fa-asterisk"></i> Detail
                </a>
            </li>
            <li class="tabs-title">
                <a data-tabs-target="usage-detail" href="#usage-detail">
                    <i class="fas fa-utensils"></i> Usage
                </a>
            </li>
            <li class="tabs-title">
                <a data-tabs-target="meta-detail" href="#meta-detail">
                    <i class="fas fa-cog"></i> Meta
                </a>
            </li>
            <li class="tabs-title">
                <a data-tabs-target="extent-detail" href="#extent-detail">
                    <i class="fas fa-map-marker-alt"></i> Extent
                </a>
            </li>
        </ul>
        <div class="tabs-content space-below" data-tabs-content="detail-tabs">
            <div class="tabs-panel is-active" id="main-detail">
                <p>
                    <span class="text-label">Resource type</span>
                    @Model.Asset.Metadata.ResourceType.FirstCharToUpper()
                </p>

                <p>
                    <span class="text-label">Topic category</span>
                    @Model.Asset.Metadata.TopicCategory.FirstCharToUpper()
                </p>

                <p>
                    <span class="text-label">Reference date</span>
                    <span title="Dataset Reference Date" data-toggle="tooltip" data-placement="top">
                        @await Html.PartialAsync("_IsoDate", Model.Asset.Metadata.DatasetReferenceDate)
                    </span>
                </p>

                @if (Model.Asset.DigitalObjectIdentifier.IsNotBlank())
                {
                <p>
                    <span class="text-label">DOI</span>
                    <span title="Digital Object Identifier" data-toggle="tooltip" data-placement="top">
                        @Model.Asset.DigitalObjectIdentifier
                    </span>
                </p>
                }

                @if (Model.Asset.Citation.IsNotBlank())
                {
                <p>
                    <span class="text-label">Citation</span>
                    <br />
                    @Model.Asset.Citation
                </p>
                }

                @if (Model.Asset.Metadata.Lineage.IsNotBlank())
                {
                <p>
                    <span class="text-label">Lineage</span>
                    <br />
                    @Model.Asset.Metadata.Lineage
                </p>
                }

                @if (Model.Asset.Metadata.AdditionalInformationSource.IsNotBlank())
                {
                <p>
                    <span class="text-label">Additional information source</span>
                    <br />
                    @Model.Asset.Metadata.AdditionalInformationSource
                </p>
                }
            </div>
            <div class="tabs-panel" id="usage-detail">
                <p>
                    <span class="text-label">Responsible organisation</span>
                    <br />
                    <span class="space-after">@(Model.Asset.Metadata.ResponsibleOrganisation.Name)</span>
                    <span class="square-badge">@Model.Asset.Metadata.ResponsibleOrganisation.Role</span>
                    <br />
                    <i class="fas fa-envelope email-address-icon"></i>
                    <span class="email-address">@Model.Asset.Metadata.ResponsibleOrganisation.Email</span>
                </p>
                
                <p>
                    <span class="text-label">Limitations on public access</span>
                    @(Model.Asset.Metadata.LimitationsOnPublicAccess == "no limitations"
                        ? "No limitations"
                        : @Model.Asset.Metadata.LimitationsOnPublicAccess)
                </p>

                <p>
                    <span class="text-label">Use constraints</span>
                    <span class="">@Model.Asset.Metadata.UseConstraints</span>
                </p>
            </div>
            <div class="tabs-panel" id="meta-detail">
                <p>
                    <span class="text-label">Metadata date</span>
                    <span title="@Model.Asset.Metadata.MetadataDate" data-toggle="tooltip">
                        @await Html.PartialAsync("_IsoDate", Model.Asset.Metadata.MetadataDate)                        
                    </span>
                </p>
                <p>
                    <span class="text-label">Metadata point of contact</span>
                    <br />
                    <span class="">@Model.Asset.Metadata.MetadataPointOfContact.Name</span>
                    <br />
                    <i class="fas fa-envelope email-address-icon"></i>
                    <span class="email-address">@Model.Asset.Metadata.MetadataPointOfContact.Email</span>

                </p>
            </div>
            <div class="tabs-panel" id="extent-detail">
                @{string begin = Model.Asset.Metadata.TemporalExtent?.Begin;}
                @{string end = Model.Asset.Metadata.TemporalExtent?.End;}
                @if (begin.IsBlank() && Model.Asset.Metadata.BoundingBox == null)
                {
                    <p>This asset has no extent information. @begin</p>
                }
                @if (begin.IsNotBlank() || end.IsNotBlank())
                {
                    <p>
                        <span class="text-label">Temporal extent</span>

                        <span data-toggle="tooltip" title="@begin" class="space-after">
                            @await Html.PartialAsync("_IsoDate", begin)
                        </span>
                        <i class="fas fa-long-arrow-alt-right space-after"></i>
                        <span data-toggle="tooltip" title="@end">
                            @await Html.PartialAsync("_IsoDate", end)
                        </span>
                    </p>
                }
                @if (Model.Asset.Metadata.BoundingBox != null && Model.Asset.Metadata.BoundingBox.North != 0M)
                {
                    <table>
                        <tr>
                            <th colspan="2">
                                Spatial extent
                            </th>
                        </tr>
                        <tr>
                            <td>North</td>
                            <td>@Model.Asset.Metadata.BoundingBox.North</td> 
                        </tr>
                        <tr>
                            <td>South</td>
                            <td>@Model.Asset.Metadata.BoundingBox.South</td> 
                        </tr>
                        <tr>
                            <td>East</td>
                            <td>@Model.Asset.Metadata.BoundingBox.East</td> 
                        </tr>
                        <tr>
                            <td>West</td>
                            <td>@Model.Asset.Metadata.BoundingBox.West</td> 
                        </tr>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

</div> <!-- container -->

@page
@using Datahub.Web.Pages.Helpers;
@model SearchModel
@{
    ViewData["Title"] = "Search";
}
@{ ViewBag.CurrentPage = "Search"; }


<br />
<div class="container">

<h1>
    Search
</h1>
<div>
    @using (Html.BeginForm("Submit", "search", FormMethod.Get, new { q = Model.SearchParams.q }))
    {
        <div class="input-group mb-5">  
            <input type="text" class="form-control" placeholder="Search the JNCC Resource hub" autofocus aria-label="Search the JNCC Resource hub" value="@(Model.SearchParams.q)" name="q">
            <div class="input-group-append">
                <button class="btn btn-success px-4" type="submit">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>

        <div id="keywords" class="form-control">
            @for (int i = 0; i < Model.Keywords.Count; i++)
            {
                var k = Model.Keywords[i];
                var buttonId = "removeKeyword" + i;
                var fieldId = "keyword" + i;

                <input id="@fieldId" type="hidden" name="k" value="@(Model.SearchParams.k[i])">
                <button id="@buttonId" type="button" class="keyword-container" onclick="removeKeyword('@i')">
                <span class="keyword" data-toggle="tooltip" data-placement="top" title="@(k.Vocab)">
                    @(k.Value)
                    <i class="fas fa-times"></i>
                </span>
                    
                </button>
            }
        </div>
    }
</div>

@if (Model.Results != null && Model.Results.Total > 0)
{
    <div class="mb-4">
        <!--card card-body bg-light -->
        <p><span class="mr-1">Found @(Model.Results.Total) results in the Resource hub</span></p>
    </div>

    @foreach (var r in Model.Results.Hits.ToList())
    {
        @await Html.PartialAsync("_SearchResult", r);
    }
}   

@{
    string keywordQueryString = Model.Keywords.ToConcatenatedString(k =>
        "&k=" + System.Net.WebUtility.UrlEncode(k.Vocab + "/" + k.Value));
}

    <nav aria-label="Pagination" class="results-pager">
    <ul class="pagination">
        @* previous page *@
        @if (Model.Pager.CurrentPage == 1) {
            <li class="pagination-previous disabled">Previous <span class="show-for-sr">page</span></li>
        } else {
            <li class="pagination-previous">
                <a href="@($"/search?q={Model.SearchParams.q}&p={Model.SearchParams.p - 1}{keywordQueryString}")">
                    Previous <span class="show-for-sr">page</span>
                </a>
            </li>
        }
        @* first page *@
        @if (Model.Pager.StartPage > 1) {
            <li>
                <a href="@($"/search?q={Model.SearchParams.q}&p={1}{keywordQueryString}")"
                    aria-label="Page 1">
                    1
                </a>
            </li>
            // show the ellipsis '...' unless it would be redundant
            if (Model.Pager.StartPage != 2) {
                <li class="ellipsis" aria-hidden="true"></li>
            }
        }
        @* range of pages e.g. 3, 4, 5, 6, 7 *@
        @foreach (int p in Model.Pager.Pages)
        {
            bool current = p == Model.Pager.CurrentPage;

            <li class="@(current ? "current" : "" )">
                <a href="@($"/search?q={Model.SearchParams.q}&p={p}{keywordQueryString}")"
                    aria-label="Page @p">
                    @if (current) {
                        <span class="show-for-sr">You are on page @p</span>
                    }
                    @p
                </a>
            </li>
        }
        @* last page *@
        @if (Model.Pager.EndPage < Model.Pager.TotalPages) {
            // show the ellipsis '...' unless it would be redundant
            if (Model.Pager.EndPage != Model.Pager.TotalPages - 1) {
                <li class="ellipsis" aria-hidden="true"></li>
            }
            <li>
                <a href="@($"/search?q={Model.SearchParams.q}&p={Model.Pager.TotalPages}{keywordQueryString}")"
                    aria-label="Page @Model.Pager.TotalPages">
                    @Model.Pager.TotalPages
                </a>
            </li>
        }
        @* next page *@
        @if (Model.Pager.CurrentPage == Model.Pager.EndPage) {
            <li class="pagination-next disabled">Next <span class="show-for-sr">page</span></li>
        } else {
            <li class="pagination-next">
                <a href="@($"/search?q={Model.SearchParams.q}&p={Model.SearchParams.p + 1}{keywordQueryString}")">
                    Next <span class="show-for-sr">page</span>
                </a>
            </li>
        }
    </ul>
    </nav>
    <br />
    <br />
</div>
